{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/components/navigation/navigation.component.ts","./src/app/core/components/navigation/navigation.component.html","./src/app/core/core.module.ts","./src/app/core/services/app.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', loadChildren:  () => import(`./pages/pages.module`).then(m => m.PagesModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'beligh';\n}\n","<app-navigation></app-navigation>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {CoreModule} from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {AppService} from '../../services/app.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  links: Array<any> = [];\n  title: string;\n  logo: string;\n\n  constructor(private breakpointObserver: BreakpointObserver,\n              private appService: AppService) {}\n\n\n  ngOnInit(): void {\n   this.findConfig();\n  }\n\n  private findConfig(): void {\n    this.appService.findConfig().subscribe(data => {\n      this.links = data.links;\n      this.title = data.title;\n      this.logo = data.logo;\n    });\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a *ngFor=\"let item of links\" mat-list-item [routerLink]=\"item.path\" routerLinkActive=\"active\">\n        <mat-icon matListIcon>{{item.icon}}</mat-icon>\n        <span>{{ item?.title }}</span>\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>{{ title }}</span>\n    </mat-toolbar>\n    <section class=\"app-content\">\n      <router-outlet></router-outlet>\n    </section>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport {RouterModule} from '@angular/router';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n@NgModule({\n  declarations: [NavigationComponent],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    RouterModule,\n    HttpClientModule,\n    FlexLayoutModule,\n  ],\n  exports: [\n    NavigationComponent\n  ]\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  constructor(private http: HttpClient) { }\n\n  findConfig(): Observable<any> {\n    return this.http.get(`assets/config.json?cacheBuster=${environment.cacheBusterHash}`);\n  }\n\n  fetchLinks(): Observable<any> {\n    return this.http.get(`assets/links.json?cacheBuster=${environment.cacheBusterHash}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  cacheBusterHash: new Date().getTime()\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}